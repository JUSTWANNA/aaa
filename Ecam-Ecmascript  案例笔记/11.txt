
    一、if 语句

    if 语句是 ECMAScript 中最常用的语句之一，事实上在许多计算机语言中都是如此。
    if 语句的语法：
    if (condition) statement1 else statement2


    二、ecmascript  迭代语句

    迭代语句又叫循环语句，声明一组要反复执行的命令，直到满足某些条件为止。
    循环通常用于迭代数组的值（因此而得名），或者执行重复的算术任务。
    本节为您介绍 ECMAScript 提供的四种迭代语句。

    *   do-while 语句
        *   while()
        *   for()
        *   for in 语句

    三、ECMAScript break 和 continue 语句

        break 和 continue 语句的不同之处
        break 语句可以立即退出循环，阻止再次反复执行任何代码。
        而 continue 语句只是退出当前循环，根据控制表达式还允许继续进行下一次循环。

        与有标签的语句一起使用
        break 语句和 continue 语句都可以与有标签的语句联合使用，返回代码中的特定位置。

    四、ECMAScript with 语句
        with 语句用于字符串，所以在调用 toUpperCase() 方法时，解释程序将检查该方法是否是本地函数。如果不是，它将检查伪对象 sMessage，看它是否为该对象的方法。然后，alert 输出 "HELLO"，因为解释程序找到了字符串 "hello" 的 toUpperCase() 方法。
        提示：with 语句是运行缓慢的代码块，尤其是在已设置了属性值时。大多数情况下，如果可能，最好避免使用它。
        var num='hello';
        with(num){
        alert(toLowerCase())
        }
    五、switch  case

        var  data=new Data().getData();

        switch(data){
        case 0:

                       '星期日';
                        break;
        case 1:

                '星期1';
                 break;
        case 2:

                '星期2';
                 break;
        case 3:

                '星期3';
                 break;
        case 4:

                '星期4';
                 break;
        case 5:

                '星期5';
                 break;
        case 6:

                '星期6';
                 break;
        }
    六、函数概述
         /*
            * 1、函数概述
            *
            *  function  fn(fn,name,age,address){}
            *  调用  fn(say(),'zhangsan','18','某某地');
            *  另一个重要概念是，与在 Java 中一样，
            *  函数在执行过 return 语句后立即停止代码。
            *  因此，return 语句后的代码都不会被执行。
            */

            function newFn(name,age,address){
                console.log((name+':'+age+':'+address));}

            newFn('zhangsan','18','北京:东城区');

            //  返回数值的函数

            function addFn(num1,mum2){
                return mum2+num1;
            }
                var result=addFn(3,5);
            console.log(result);
    七、ECMAScript arguments 对象
        arguments 对象
        在函数代码中，使用特殊对象 arguments，开发者无需明确指出参数名，就能访问它们。
        例如，在函数 sayHi() 中，第一个参数是 message。用 arguments[0] 也可以访问这个值，
        即第一个参数的值（第一个参数位于位置 0，第二个参数位于位置 1，依此类推）。


       function  addSum(){

        arguments=>  代表参数的值  arguments[0],第一个值
        arguments.length

       }

       模拟函数重载
       用 arguments 对象判断传递给函数的参数个数，即可模拟函数重载：
    八、ECMAScript Function 对象（类）

       var newFn=new function('参数','方法=>  alert('测试数据')');

       如果函数名称一样  函数方法会被新写的覆盖;
